package decoder;
//Main class for extracting messages from images

import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;

import javax.imageio.ImageIO;

import steg.BinaMatte;

import crypto.CryptoBase;
import crypto.CryptoInterface;


public class Decode {

	
	public static void main(String[] args) {

		File source = null;
		BufferedImage changer = null;
		try {
			source = new File(args[0]);
			changer = ImageIO.read(source);
		} catch (IOException e) {
			System.out.println("FAIL");
		}
		
		CryptoInterface crypto = new CryptoBase();
		
		BinaMatte code = new BinaMatte();
		
		char[] key = new char[] {782, 383, 1003, 390, 234, 506, 223, 245, 130, 200, 603, 423, 368, 202, 659, 376, 220, 517, 94, 42, 414, 350, 789, 110, 783, 59, 395, 375, 300, 437, 85, 19, 479, 501, 1186, 401, 112, 201, 158, 254, 401, 1, 262, 419, 243, 2, 66, 27, 972, 31, 598, 526, 69, 546, 395, 534, 559, 299, 1093, 413, 500, 26, 1039, 527, 1156, 280, 528, 453, 765, 81, 707, 462, 354, 349, 600, 349, 294, 348, 1160, 171, 82, 536, 736, 253, 843, 85, 249, 448, 962, 195, 644, 431, 27, 150, 1095, 250, 871, 138, 533, 399, 1158, 238, 576, 484, 138, 180, 586, 282, 236, 412, 712, 250, 665, 26, 837, 62, 412, 432, 365, 408, 584, 178, 872, 365, 1021, 22, 1060, 61, 464, 509, 657, 539, 942, 282, 701, 275, 450, 47, 1123, 517, 915, 37, 97, 292, 328, 245, 944, 196, 571, 203, 50, 6, 340, 13, 843, 191, 972, 282, 1027, 48, 63, 494, 1089, 311, 382, 312, 1003, 93, 964, 203, 1006, 357, 1003, 546, 1014, 70, 419, 249, 8, 473, 593, 139, 165, 164, 890, 345, 59, 422, 1119, 420, 1150, 456, 678, 97, 950, 477, 936, 185, 782, 449, 419, 415, 704, 152, 623, 297, 945, 504, 0, 64, 699, 252, 355, 200, 850, 45, 374, 218, 671, 178, 1081, 479, 899, 181, 981, 169, 1147, 184, 358, 246, 1038, 432, 1001, 189, 331, 104, 606, 253, 111, 283, 944, 377, 697, 43, 964, 360, 1126, 108, 1190, 37, 1132, 160, 1105, 4, 1077, 85, 203, 17, 214, 386, 1125, 31, 239, 546, 379, 417, 216, 412, 305, 229, 40, 410, 1190, 13, 1106, 125, 1080, 297, 1187, 218, 608, 406, 544, 161, 978, 467, 237, 258, 1105, 104, 764, 235, 542, 36, 1001, 500, 25, 212, 135, 27, 729, 325, 1029, 187, 60, 81, 1003, 527, 678, 250, 1028, 174, 217, 26, 1027, 299, 423, 386, 763, 387, 166, 287, 747, 135, 387, 99, 709, 315, 431, 485, 1037, 267, 996, 359, 93, 222, 674, 33, 492, 234, 364, 382, 1171, 375, 762, 305, 578, 498, 266, 464, 1111, 482, 471, 150, 13, 59, 1151, 312, 161, 223, 1160, 106, 102, 298, 119, 498, 393, 216, 571, 334, 682, 498, 852, 118, 163, 391, 622, 296, 78, 456, 673, 354, 115, 490, 1117, 506, 835, 152, 458, 462, 238, 224, 761, 334, 143, 72, 748, 344, 1122, 345, 508, 303, 453, 416, 950, 278, 554, 409, 80, 535, 571, 523, 453, 17, 963, 417, 437, 163, 332, 525, 806, 299, 478, 103, 991, 260, 1192, 106, 398, 537, 751, 230, 1009, 242, 113, 524, 152, 523, 909, 367, 569, 154, 469, 25, 603, 480, 883, 63, 307, 542, 874, 125, 524, 508, 341, 129, 44, 58, 1196, 311, 551, 13, 1061, 174, 548, 163, 812, 494, 149, 490, 488, 308, 619, 103, 891, 190, 1183, 313, 946, 252, 120, 420, 66, 285, 37, 107, 815, 458, 1135, 117, 651, 354, 203, 296, 685, 304, 820, 63, 453, 256, 194, 386, 300, 266, 66, 257, 879, 376, 44, 392, 461, 317, 653, 528, 776, 153, 1119, 504, 901, 73, 34, 407, 983, 320, 932, 368, 591, 62, 572, 442, 462, 45, 873, 449, 493, 452, 481, 358, 1097, 49, 312, 50, 582, 459};
		
		String message= code.decode(changer, key);
		
		message = crypto.decrypt(message);
		
		System.out.println(message);
		
	}

}
